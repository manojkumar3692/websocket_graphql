{"id":"../node_modules/decimal.js-light/decimal.js","dependencies":[{"name":"/Users/manojkumars/Documents/websocket_react/package.json","includedInParent":true,"mtime":1582035290445},{"name":"/Users/manojkumars/Documents/websocket_react/node_modules/decimal.js-light/package.json","includedInParent":true,"mtime":1581928656381}],"generated":{"js":"var define;\n/*! decimal.js-light v2.5.0 https://github.com/MikeMcl/decimal.js-light/LICENCE */\r\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js-light v2.5.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js-light\r\n   *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Expat Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  var MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    Decimal = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\r\n      // `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -MAX_E\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to MAX_E\r\n\r\n      // The natural logarithm of 10.\r\n      // 115 digits\r\n      LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    exponentOutOfRange = decimalError + 'Exponent out of range: ',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    ONE,\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n    MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE),    // 1286742750677284\r\n\r\n    // Decimal.prototype object\r\n    P = {};\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue                       abs\r\n   *  comparedTo                          cmp\r\n   *  decimalPlaces                       dp\r\n   *  dividedBy                           div\r\n   *  dividedToIntegerBy                  idiv\r\n   *  equals                              eq\r\n   *  exponent\r\n   *  greaterThan                         gt\r\n   *  greaterThanOrEqualTo                gte\r\n   *  isInteger                           isint\r\n   *  isNegative                          isneg\r\n   *  isPositive                          ispos\r\n   *  isZero\r\n   *  lessThan                            lt\r\n   *  lessThanOrEqualTo                   lte\r\n   *  logarithm                           log\r\n   *  minus                               sub\r\n   *  modulo                              mod\r\n   *  naturalExponential                  exp\r\n   *  naturalLogarithm                    ln\r\n   *  negated                             neg\r\n   *  plus                                add\r\n   *  precision                           sd\r\n   *  squareRoot                          sqrt\r\n   *  times                               mul\r\n   *  toDecimalPlaces                     todp\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toInteger                           toint\r\n   *  toNumber\r\n   *  toPower                             pow\r\n   *  toPrecision\r\n   *  toSignificantDigits                 tosd\r\n   *  toString\r\n   *  valueOf                             val\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this;\r\n\r\n    y = new x.constructor(y);\r\n\r\n    // Signs differ?\r\n    if (x.s !== y.s) return x.s || -y.s;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;\r\n\r\n    xdL = x.d.length;\r\n    ydL = y.d.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var x = this,\r\n      w = x.d.length - 1,\r\n      dp = (w - x.e) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = x.d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) dp--;\r\n\r\n    return dp < 0 ? 0 : dp;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).\r\n   *\r\n   */\r\n  P.exponent = function () {\r\n    return getBase10Exponent(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    return this.cmp(y) >= 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isint = function () {\r\n    return this.e > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isneg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.ispos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return this.s === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   * If no base is specified, return log[10](x).\r\n   *\r\n   * log[base](x) = ln(x) / ln(base)\r\n   *\r\n   * The maximum error of the result is 1 ulp (unit in the last place).\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var r,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      wpr = pr + 5;\r\n\r\n    // Default base is 10.\r\n    if (base === void 0) {\r\n      base = new Ctor(10);\r\n    } else {\r\n      base = new Ctor(base);\r\n\r\n      // log[-b](x) = NaN\r\n      // log[0](x)  = NaN\r\n      // log[1](x)  = NaN\r\n      if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    // log[b](-x) = NaN\r\n    // log[b](0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // log[b](1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    external = false;\r\n    r = divide(ln(x, wpr), ln(base, wpr), wpr);\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // x % 0 = NaN\r\n    if (!y.s) throw Error(decimalError + 'NaN');\r\n\r\n    // Return x if x is 0.\r\n    if (!x.s) return round(new Ctor(x), pr);\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n    q = divide(x, y, 0, 1).times(y);\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return exp(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return ln(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s || 0;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var e, sd, w,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    e = getBase10Exponent(x) + 1;\r\n    w = x.d.length - 1;\r\n    sd = w * LOG_BASE + 1;\r\n    w = x.d[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) sd--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = x.d[0]; w >= 10; w /= 10) sd++;\r\n    }\r\n\r\n    return z && e > sd ? e : sd;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var e, n, pr, r, s, t, wpr,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative or zero?\r\n    if (x.s < 1) {\r\n      if (!x.s) return new Ctor(0);\r\n\r\n      // sqrt(-x) = NaN\r\n      throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    e = getBase10Exponent(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '1e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    pr = Ctor.precision;\r\n    s = wpr = pr + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, wpr + 2)).times(0.5);\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {\r\n        n = n.slice(wpr - 3, wpr + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (s == wpr && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          round(t, pr + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        } else if (n != '9999') {\r\n          break;\r\n        }\r\n\r\n        wpr += 4;\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    // Return 0 if either is 0.\r\n    if (!x.s || !y.s) return new Ctor(0);\r\n\r\n    y.s *= x.s;\r\n    e = x.e + y.e;\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = e;\r\n\r\n    return external ? round(y, Ctor.precision) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.todp = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return round(x, dp + getBase10Exponent(x) + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = toString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), dp + 1, rm);\r\n      str = toString(x, true, dp + 1);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) return toString(x);\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\r\n    str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isneg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.toInteger = P.toint = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * The maximum error is 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, sign, yIsInt,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      guard = 12,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // pow(x, 0) = 1\r\n    if (!y.s) return new Ctor(ONE);\r\n\r\n    x = new Ctor(x);\r\n\r\n    // pow(0, y > 0) = 0\r\n    // pow(0, y < 0) = Infinity\r\n    if (!x.s) {\r\n      if (y.s < 1) throw Error(decimalError + 'Infinity');\r\n      return x;\r\n    }\r\n\r\n    // pow(1, y) = 1\r\n    if (x.eq(ONE)) return x;\r\n\r\n    pr = Ctor.precision;\r\n\r\n    // pow(x, 1) = x\r\n    if (y.eq(ONE)) return round(x, pr);\r\n\r\n    e = y.e;\r\n    k = y.d.length - 1;\r\n    yIsInt = e >= k;\r\n    sign = x.s;\r\n\r\n    if (!yIsInt) {\r\n\r\n      // pow(x < 0, y non-integer) = NaN\r\n      if (sign < 0) throw Error(decimalError + 'NaN');\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = new Ctor(ONE);\r\n\r\n      // Max k of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      e = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n      external = false;\r\n\r\n      for (;;) {\r\n        if (k % 2) {\r\n          r = r.times(x);\r\n          truncate(r.d, e);\r\n        }\r\n\r\n        k = mathfloor(k / 2);\r\n        if (k === 0) break;\r\n\r\n        x = x.times(x);\r\n        truncate(x.d, e);\r\n      }\r\n\r\n      external = true;\r\n\r\n      return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\r\n    }\r\n\r\n    // Result is negative if x is negative and the last digit of integer y is odd.\r\n    sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n    x.s = 1;\r\n    external = false;\r\n    r = y.times(ln(x, pr + guard));\r\n    external = true;\r\n    r = exp(r);\r\n    r.s = sign;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var e, str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), sd, rm);\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.tosd = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return round(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = P.valueOf = P.val = P.toJSON = function () {\r\n    var x = this,\r\n      e = getBase10Exponent(x),\r\n      Ctor = x.constructor;\r\n\r\n    return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  add                 P.minus, P.plus\r\n   *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd\r\n   *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln\r\n   *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln\r\n   *  exp                 P.exp, P.pow\r\n   *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,\r\n   *                      P.toString, divide, round, toString, exp, ln\r\n   *  getLn10             P.log, ln\r\n   *  getZeroString       digitsToString, toString\r\n   *  ln                  P.log, P.ln, P.pow, exp\r\n   *  parseDecimal        Decimal\r\n   *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,\r\n   *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,\r\n   *                      divide, getLn10, exp, ln\r\n   *  subtract            P.minus, P.plus\r\n   *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf\r\n   *  truncate            P.pow\r\n   *\r\n   *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,\r\n   *                      getLn10, exp, ln, parseDecimal, Decimal, config\r\n   */\r\n\r\n\r\n  function add(x, y) {\r\n    var carry, d, e, i, k, len, xd, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // If either is zero...\r\n    if (!x.s || !y.s) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!y.s) y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    k = x.e;\r\n    e = y.e;\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % BASE | 0;\r\n        carry = temp / BASE | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * BASE + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, dp) {\r\n      var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either 0?\r\n      if (!x.s) return new Ctor(x);\r\n      if (!y.s) throw Error(decimalError + 'Division by zero');\r\n\r\n      e = x.e - y.e;\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      for (i = 0; yd[i] == (xd[i] || 0); ) ++i;\r\n      if (yd[i] > (xd[i] || 0)) --e;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n      } else if (dp) {\r\n        sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) return new Ctor(0);\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / LOG_BASE + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * BASE + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= BASE/2\r\n        k = BASE / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k);\r\n          xd = multiplyInteger(xd, k);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= BASE / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= BASE) k = BASE - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n\r\n      q.e = e;\r\n\r\n      return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`\r\n   * significant digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   */\r\n  function exp(x, sd) {\r\n    var denominator, guard, pow, sum, t, wpr,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n\r\n    // exp(0) = 1\r\n    if (!x.s) return new Ctor(ONE);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    while (x.abs().gte(0.1)) {\r\n      x = x.times(t);    // x = x / 2^5\r\n      k += 5;\r\n    }\r\n\r\n    // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(ONE);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = round(pow.times(x), wpr);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        while (k--) sum = round(sum.times(sum), wpr);\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(x) {\r\n    var e = x.e * LOG_BASE,\r\n      w = x.d[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for (; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n\r\n    if (sd > Ctor.LN10.sd()) {\r\n\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(decimalError + 'LN10 precision limit exceeded');\r\n    }\r\n\r\n    return round(new Ctor(Ctor.LN10), sd);\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(n) is non-terminating (n != 1)\r\n   *\r\n   */\r\n  function ln(y, sd) {\r\n    var c, c0, denominator, e, numerator, sum, t, wpr, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // ln(-x) = NaN\r\n    // ln(0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // ln(1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    if (x.eq(10)) {\r\n      if (sd == null) external = true;\r\n      return getLn10(Ctor, wpr);\r\n    }\r\n\r\n    wpr += guard;\r\n    Ctor.precision = wpr;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n    e = getBase10Exponent(x);\r\n\r\n    if (Math.abs(e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = getBase10Exponent(x);\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(x, pr)) : x;\r\n    }\r\n\r\n    // x is reduced to a value near 1.\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\r\n    x2 = round(x.times(x), wpr);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = round(numerator.times(x2), wpr);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr);\r\n\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48;) ++i;\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48;) --len;\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      e = e - i - 1;\r\n      x.e = mathfloor(e / LOG_BASE);\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);\r\n    } else {\r\n\r\n      // Zero.\r\n      x.s = 0;\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).\r\n   */\r\n   function round(x, sd, rm) {\r\n    var i, j, k, n, rd, doRound, w, xdi,\r\n      xd = x.d;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd which contains the rounding digit, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // n: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;\r\n    i = sd - n;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) return x;\r\n      w = k = xd[xdi];\r\n\r\n      // Get the number of digits of w.\r\n      for (n = 1; k >= 10; k /= 10) n++;\r\n\r\n      // Get the index of rd within w.\r\n      i %= LOG_BASE;\r\n\r\n      // Get the index of rd within w, adjusted for leading zeros.\r\n      // The number of leading zeros of w is given by LOG_BASE - n.\r\n      j = i - LOG_BASE + n;\r\n    }\r\n\r\n    if (rm !== void 0) {\r\n      k = mathpow(10, n - j - 1);\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / k % 10 | 0;\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\r\n\r\n      // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the\r\n      // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give\r\n      // 714.\r\n\r\n      doRound = rm < 4\r\n        ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n    }\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      if (doRound) {\r\n        k = getBase10Exponent(x);\r\n        xd.length = 1;\r\n\r\n        // Convert sd to decimal places.\r\n        sd = sd - k - 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = mathfloor(-sd / LOG_BASE) || 0;\r\n      } else {\r\n        xd.length = 1;\r\n\r\n        // Zero.\r\n        xd[0] = x.e = x.s = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (doRound) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n          if ((xd[0] += k) == BASE) {\r\n            xd[0] = 1;\r\n            ++x.e;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n\r\n    if (external && (x.e > MAX_E || x.e < -MAX_E)) {\r\n      throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function subtract(x, y) {\r\n    var d, e, i, j, k, len, xd, xe, xLTy, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // Return y negated if x is zero.\r\n    // Return x if y is zero and x is non-zero.\r\n    if (!x.s || !y.s) {\r\n      if (y.s) y.s = -y.s;\r\n      else y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are non-zero numbers with the same sign.\r\n\r\n    e = y.e;\r\n    xe = x.e;\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of zeros\r\n      // needing to be prepended, but this can be avoided while still ensuring correct rounding by\r\n      // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to xd if shorter.\r\n    // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(0);\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function toString(x, isExp, sd) {\r\n    var k,\r\n      e = getBase10Exponent(x),\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (e < 0 ? 'e' : 'e+') + e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  clone\r\n   *  config/set\r\n   */\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * value {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(value) {\r\n      var x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(value);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (value instanceof Decimal) {\r\n        x.s = value.s;\r\n        x.e = value.e;\r\n        x.d = (value = value.d) ? value.slice() : value;\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'number') {\r\n\r\n        // Reject Infinity/NaN.\r\n        if (value * 0 !== 0) {\r\n          throw Error(invalidArgument + value);\r\n        }\r\n\r\n        if (value > 0) {\r\n          x.s = 1;\r\n        } else if (value < 0) {\r\n          value = -value;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 0;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (value === ~~value && value < 1e7) {\r\n          x.e = 0;\r\n          x.d = [value];\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, value.toString());\r\n      } else if (typeof value !== 'string') {\r\n        throw Error(invalidArgument + value);\r\n      }\r\n\r\n      // Minus sign?\r\n      if (value.charCodeAt(0) === 45) {\r\n        value = value.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      if (isDecimal.test(value)) parseDecimal(x, value);\r\n      else throw Error(invalidArgument + value);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n\r\n    Decimal.clone = clone;\r\n    Decimal.config = Decimal.set = config;\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      throw Error(decimalError + 'Object expected');\r\n    }\r\n    var i, p, v,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -1 / 0, 0,\r\n        'toExpPos', 0, 1 / 0\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if ((v = obj[p = ps[i]]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if ((v = obj[p = 'LN10']) !== void 0) {\r\n        if (v == Math.LN10) this[p] = new this(v);\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(Decimal);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Internal constant.\r\n  ONE = new Decimal(1);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = Decimal;\r\n\r\n    // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self\r\n        ? self : Function('return this')();\r\n    }\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1127,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1128,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1129,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1130,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1131,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1132,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1133,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1134,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1135,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1136,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1137,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1138,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1139,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1140,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1141,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1142,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1143,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1144,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1145,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1146,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1147,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1148,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1149,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1150,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1151,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1152,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1153,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1154,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1155,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1156,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1157,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1158,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1159,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1160,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1161,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1162,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1163,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1164,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1165,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1166,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1167,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1168,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1169,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1170,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1171,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1172,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1173,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1174,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1175,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1176,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1177,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1178,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1179,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1180,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1181,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1182,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1183,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1184,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1185,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1186,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1187,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1188,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1189,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1190,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1191,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1192,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1193,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1194,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1195,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1196,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1197,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1198,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1199,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1200,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1201,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1202,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1203,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1204,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1205,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1206,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1207,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1208,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1209,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1210,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1211,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1212,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1213,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1214,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1215,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1216,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1217,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1218,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1219,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1220,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1221,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1222,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1223,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1224,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1225,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1226,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1227,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1228,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1229,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1230,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1231,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1232,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1233,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1234,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1235,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1236,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1237,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1238,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1239,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1240,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1241,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1242,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1243,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1244,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1245,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1246,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1247,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1248,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1249,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1250,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1251,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1252,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1253,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1254,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1255,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1256,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1257,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1258,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1259,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1260,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1261,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1262,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1263,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1264,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1265,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1266,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1267,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1268,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1269,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1270,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1271,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1272,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1273,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1274,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1275,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1276,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1277,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1278,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1279,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1280,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1281,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1282,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1283,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1284,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1285,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1286,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1287,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1288,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1289,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1290,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1291,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1292,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1293,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1294,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1295,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1296,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1297,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1298,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1299,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1300,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1301,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1302,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1303,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1304,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1305,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1306,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1307,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1308,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1309,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1310,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1311,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1312,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1313,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1314,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1315,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1316,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1317,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1318,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1319,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1320,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1321,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1322,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1323,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1324,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1325,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1326,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1327,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1328,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1329,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1330,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1331,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1332,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1333,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1334,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1335,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1336,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1337,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1338,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1339,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1340,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1341,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1342,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1343,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1344,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1345,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1346,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1347,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1348,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1349,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1350,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1351,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1352,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1353,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1354,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1355,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1356,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1357,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1358,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1359,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1360,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1361,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1362,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1363,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1364,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1365,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1366,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1367,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1368,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1369,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1370,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1371,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1372,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1373,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1374,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1375,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1376,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1377,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1378,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1379,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1380,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1381,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1382,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1383,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1384,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1385,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1386,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1387,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1388,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1389,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1390,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1391,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1392,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1393,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1394,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1395,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1396,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1397,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1398,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1399,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1400,"column":0},"generated":{"line":1401,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1401,"column":0},"generated":{"line":1402,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1402,"column":0},"generated":{"line":1403,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1403,"column":0},"generated":{"line":1404,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1404,"column":0},"generated":{"line":1405,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1405,"column":0},"generated":{"line":1406,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1406,"column":0},"generated":{"line":1407,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1407,"column":0},"generated":{"line":1408,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1408,"column":0},"generated":{"line":1409,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1409,"column":0},"generated":{"line":1410,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1410,"column":0},"generated":{"line":1411,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1411,"column":0},"generated":{"line":1412,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1412,"column":0},"generated":{"line":1413,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1413,"column":0},"generated":{"line":1414,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1414,"column":0},"generated":{"line":1415,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1415,"column":0},"generated":{"line":1416,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1416,"column":0},"generated":{"line":1417,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1417,"column":0},"generated":{"line":1418,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1418,"column":0},"generated":{"line":1419,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1419,"column":0},"generated":{"line":1420,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1420,"column":0},"generated":{"line":1421,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1421,"column":0},"generated":{"line":1422,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1422,"column":0},"generated":{"line":1423,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1423,"column":0},"generated":{"line":1424,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1424,"column":0},"generated":{"line":1425,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1425,"column":0},"generated":{"line":1426,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1426,"column":0},"generated":{"line":1427,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1427,"column":0},"generated":{"line":1428,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1428,"column":0},"generated":{"line":1429,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1429,"column":0},"generated":{"line":1430,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1430,"column":0},"generated":{"line":1431,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1431,"column":0},"generated":{"line":1432,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1432,"column":0},"generated":{"line":1433,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1433,"column":0},"generated":{"line":1434,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1434,"column":0},"generated":{"line":1435,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1435,"column":0},"generated":{"line":1436,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1436,"column":0},"generated":{"line":1437,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1437,"column":0},"generated":{"line":1438,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1438,"column":0},"generated":{"line":1439,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1439,"column":0},"generated":{"line":1440,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1440,"column":0},"generated":{"line":1441,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1441,"column":0},"generated":{"line":1442,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1442,"column":0},"generated":{"line":1443,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1443,"column":0},"generated":{"line":1444,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1444,"column":0},"generated":{"line":1445,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1445,"column":0},"generated":{"line":1446,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1446,"column":0},"generated":{"line":1447,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1447,"column":0},"generated":{"line":1448,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1448,"column":0},"generated":{"line":1449,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1449,"column":0},"generated":{"line":1450,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1450,"column":0},"generated":{"line":1451,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1451,"column":0},"generated":{"line":1452,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1452,"column":0},"generated":{"line":1453,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1453,"column":0},"generated":{"line":1454,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1454,"column":0},"generated":{"line":1455,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1455,"column":0},"generated":{"line":1456,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1456,"column":0},"generated":{"line":1457,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1457,"column":0},"generated":{"line":1458,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1458,"column":0},"generated":{"line":1459,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1459,"column":0},"generated":{"line":1460,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1460,"column":0},"generated":{"line":1461,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1461,"column":0},"generated":{"line":1462,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1462,"column":0},"generated":{"line":1463,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1463,"column":0},"generated":{"line":1464,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1464,"column":0},"generated":{"line":1465,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1465,"column":0},"generated":{"line":1466,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1466,"column":0},"generated":{"line":1467,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1467,"column":0},"generated":{"line":1468,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1468,"column":0},"generated":{"line":1469,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1469,"column":0},"generated":{"line":1470,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1470,"column":0},"generated":{"line":1471,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1471,"column":0},"generated":{"line":1472,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1472,"column":0},"generated":{"line":1473,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1473,"column":0},"generated":{"line":1474,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1474,"column":0},"generated":{"line":1475,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1475,"column":0},"generated":{"line":1476,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1476,"column":0},"generated":{"line":1477,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1477,"column":0},"generated":{"line":1478,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1478,"column":0},"generated":{"line":1479,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1479,"column":0},"generated":{"line":1480,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1480,"column":0},"generated":{"line":1481,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1481,"column":0},"generated":{"line":1482,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1482,"column":0},"generated":{"line":1483,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1483,"column":0},"generated":{"line":1484,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1484,"column":0},"generated":{"line":1485,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1485,"column":0},"generated":{"line":1486,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1486,"column":0},"generated":{"line":1487,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1487,"column":0},"generated":{"line":1488,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1488,"column":0},"generated":{"line":1489,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1489,"column":0},"generated":{"line":1490,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1490,"column":0},"generated":{"line":1491,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1491,"column":0},"generated":{"line":1492,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1492,"column":0},"generated":{"line":1493,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1493,"column":0},"generated":{"line":1494,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1494,"column":0},"generated":{"line":1495,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1495,"column":0},"generated":{"line":1496,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1496,"column":0},"generated":{"line":1497,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1497,"column":0},"generated":{"line":1498,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1498,"column":0},"generated":{"line":1499,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1499,"column":0},"generated":{"line":1500,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1500,"column":0},"generated":{"line":1501,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1501,"column":0},"generated":{"line":1502,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1502,"column":0},"generated":{"line":1503,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1503,"column":0},"generated":{"line":1504,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1504,"column":0},"generated":{"line":1505,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1505,"column":0},"generated":{"line":1506,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1506,"column":0},"generated":{"line":1507,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1507,"column":0},"generated":{"line":1508,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1508,"column":0},"generated":{"line":1509,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1509,"column":0},"generated":{"line":1510,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1510,"column":0},"generated":{"line":1511,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1511,"column":0},"generated":{"line":1512,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1512,"column":0},"generated":{"line":1513,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1513,"column":0},"generated":{"line":1514,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1514,"column":0},"generated":{"line":1515,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1515,"column":0},"generated":{"line":1516,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1516,"column":0},"generated":{"line":1517,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1517,"column":0},"generated":{"line":1518,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1518,"column":0},"generated":{"line":1519,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1519,"column":0},"generated":{"line":1520,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1520,"column":0},"generated":{"line":1521,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1521,"column":0},"generated":{"line":1522,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1522,"column":0},"generated":{"line":1523,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1523,"column":0},"generated":{"line":1524,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1524,"column":0},"generated":{"line":1525,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1525,"column":0},"generated":{"line":1526,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1526,"column":0},"generated":{"line":1527,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1527,"column":0},"generated":{"line":1528,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1528,"column":0},"generated":{"line":1529,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1529,"column":0},"generated":{"line":1530,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1530,"column":0},"generated":{"line":1531,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1531,"column":0},"generated":{"line":1532,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1532,"column":0},"generated":{"line":1533,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1533,"column":0},"generated":{"line":1534,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1534,"column":0},"generated":{"line":1535,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1535,"column":0},"generated":{"line":1536,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1536,"column":0},"generated":{"line":1537,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1537,"column":0},"generated":{"line":1538,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1538,"column":0},"generated":{"line":1539,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1539,"column":0},"generated":{"line":1540,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1540,"column":0},"generated":{"line":1541,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1541,"column":0},"generated":{"line":1542,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1542,"column":0},"generated":{"line":1543,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1543,"column":0},"generated":{"line":1544,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1544,"column":0},"generated":{"line":1545,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1545,"column":0},"generated":{"line":1546,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1546,"column":0},"generated":{"line":1547,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1547,"column":0},"generated":{"line":1548,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1548,"column":0},"generated":{"line":1549,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1549,"column":0},"generated":{"line":1550,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1550,"column":0},"generated":{"line":1551,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1551,"column":0},"generated":{"line":1552,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1552,"column":0},"generated":{"line":1553,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1553,"column":0},"generated":{"line":1554,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1554,"column":0},"generated":{"line":1555,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1555,"column":0},"generated":{"line":1556,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1556,"column":0},"generated":{"line":1557,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1557,"column":0},"generated":{"line":1558,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1558,"column":0},"generated":{"line":1559,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1559,"column":0},"generated":{"line":1560,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1560,"column":0},"generated":{"line":1561,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1561,"column":0},"generated":{"line":1562,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1562,"column":0},"generated":{"line":1563,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1563,"column":0},"generated":{"line":1564,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1564,"column":0},"generated":{"line":1565,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1565,"column":0},"generated":{"line":1566,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1566,"column":0},"generated":{"line":1567,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1567,"column":0},"generated":{"line":1568,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1568,"column":0},"generated":{"line":1569,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1569,"column":0},"generated":{"line":1570,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1570,"column":0},"generated":{"line":1571,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1571,"column":0},"generated":{"line":1572,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1572,"column":0},"generated":{"line":1573,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1573,"column":0},"generated":{"line":1574,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1574,"column":0},"generated":{"line":1575,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1575,"column":0},"generated":{"line":1576,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1576,"column":0},"generated":{"line":1577,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1577,"column":0},"generated":{"line":1578,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1578,"column":0},"generated":{"line":1579,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1579,"column":0},"generated":{"line":1580,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1580,"column":0},"generated":{"line":1581,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1581,"column":0},"generated":{"line":1582,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1582,"column":0},"generated":{"line":1583,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1583,"column":0},"generated":{"line":1584,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1584,"column":0},"generated":{"line":1585,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1585,"column":0},"generated":{"line":1586,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1586,"column":0},"generated":{"line":1587,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1587,"column":0},"generated":{"line":1588,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1588,"column":0},"generated":{"line":1589,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1589,"column":0},"generated":{"line":1590,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1590,"column":0},"generated":{"line":1591,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1591,"column":0},"generated":{"line":1592,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1592,"column":0},"generated":{"line":1593,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1593,"column":0},"generated":{"line":1594,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1594,"column":0},"generated":{"line":1595,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1595,"column":0},"generated":{"line":1596,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1596,"column":0},"generated":{"line":1597,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1597,"column":0},"generated":{"line":1598,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1598,"column":0},"generated":{"line":1599,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1599,"column":0},"generated":{"line":1600,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1600,"column":0},"generated":{"line":1601,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1601,"column":0},"generated":{"line":1602,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1602,"column":0},"generated":{"line":1603,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1603,"column":0},"generated":{"line":1604,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1604,"column":0},"generated":{"line":1605,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1605,"column":0},"generated":{"line":1606,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1606,"column":0},"generated":{"line":1607,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1607,"column":0},"generated":{"line":1608,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1608,"column":0},"generated":{"line":1609,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1609,"column":0},"generated":{"line":1610,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1610,"column":0},"generated":{"line":1611,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1611,"column":0},"generated":{"line":1612,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1612,"column":0},"generated":{"line":1613,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1613,"column":0},"generated":{"line":1614,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1614,"column":0},"generated":{"line":1615,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1615,"column":0},"generated":{"line":1616,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1616,"column":0},"generated":{"line":1617,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1617,"column":0},"generated":{"line":1618,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1618,"column":0},"generated":{"line":1619,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1619,"column":0},"generated":{"line":1620,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1620,"column":0},"generated":{"line":1621,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1621,"column":0},"generated":{"line":1622,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1622,"column":0},"generated":{"line":1623,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1623,"column":0},"generated":{"line":1624,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1624,"column":0},"generated":{"line":1625,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1625,"column":0},"generated":{"line":1626,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1626,"column":0},"generated":{"line":1627,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1627,"column":0},"generated":{"line":1628,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1628,"column":0},"generated":{"line":1629,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1629,"column":0},"generated":{"line":1630,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1630,"column":0},"generated":{"line":1631,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1631,"column":0},"generated":{"line":1632,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1632,"column":0},"generated":{"line":1633,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1633,"column":0},"generated":{"line":1634,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1634,"column":0},"generated":{"line":1635,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1635,"column":0},"generated":{"line":1636,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1636,"column":0},"generated":{"line":1637,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1637,"column":0},"generated":{"line":1638,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1638,"column":0},"generated":{"line":1639,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1639,"column":0},"generated":{"line":1640,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1640,"column":0},"generated":{"line":1641,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1641,"column":0},"generated":{"line":1642,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1642,"column":0},"generated":{"line":1643,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1643,"column":0},"generated":{"line":1644,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1644,"column":0},"generated":{"line":1645,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1645,"column":0},"generated":{"line":1646,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1646,"column":0},"generated":{"line":1647,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1647,"column":0},"generated":{"line":1648,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1648,"column":0},"generated":{"line":1649,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1649,"column":0},"generated":{"line":1650,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1650,"column":0},"generated":{"line":1651,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1651,"column":0},"generated":{"line":1652,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1652,"column":0},"generated":{"line":1653,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1653,"column":0},"generated":{"line":1654,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1654,"column":0},"generated":{"line":1655,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1655,"column":0},"generated":{"line":1656,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1656,"column":0},"generated":{"line":1657,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1657,"column":0},"generated":{"line":1658,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1658,"column":0},"generated":{"line":1659,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1659,"column":0},"generated":{"line":1660,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1660,"column":0},"generated":{"line":1661,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1661,"column":0},"generated":{"line":1662,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1662,"column":0},"generated":{"line":1663,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1663,"column":0},"generated":{"line":1664,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1664,"column":0},"generated":{"line":1665,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1665,"column":0},"generated":{"line":1666,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1666,"column":0},"generated":{"line":1667,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1667,"column":0},"generated":{"line":1668,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1668,"column":0},"generated":{"line":1669,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1669,"column":0},"generated":{"line":1670,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1670,"column":0},"generated":{"line":1671,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1671,"column":0},"generated":{"line":1672,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1672,"column":0},"generated":{"line":1673,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1673,"column":0},"generated":{"line":1674,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1674,"column":0},"generated":{"line":1675,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1675,"column":0},"generated":{"line":1676,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1676,"column":0},"generated":{"line":1677,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1677,"column":0},"generated":{"line":1678,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1678,"column":0},"generated":{"line":1679,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1679,"column":0},"generated":{"line":1680,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1680,"column":0},"generated":{"line":1681,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1681,"column":0},"generated":{"line":1682,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1682,"column":0},"generated":{"line":1683,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1683,"column":0},"generated":{"line":1684,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1684,"column":0},"generated":{"line":1685,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1685,"column":0},"generated":{"line":1686,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1686,"column":0},"generated":{"line":1687,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1687,"column":0},"generated":{"line":1688,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1688,"column":0},"generated":{"line":1689,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1689,"column":0},"generated":{"line":1690,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1690,"column":0},"generated":{"line":1691,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1691,"column":0},"generated":{"line":1692,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1692,"column":0},"generated":{"line":1693,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1693,"column":0},"generated":{"line":1694,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1694,"column":0},"generated":{"line":1695,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1695,"column":0},"generated":{"line":1696,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1696,"column":0},"generated":{"line":1697,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1697,"column":0},"generated":{"line":1698,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1698,"column":0},"generated":{"line":1699,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1699,"column":0},"generated":{"line":1700,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1700,"column":0},"generated":{"line":1701,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1701,"column":0},"generated":{"line":1702,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1702,"column":0},"generated":{"line":1703,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1703,"column":0},"generated":{"line":1704,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1704,"column":0},"generated":{"line":1705,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1705,"column":0},"generated":{"line":1706,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1706,"column":0},"generated":{"line":1707,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1707,"column":0},"generated":{"line":1708,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1708,"column":0},"generated":{"line":1709,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1709,"column":0},"generated":{"line":1710,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1710,"column":0},"generated":{"line":1711,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1711,"column":0},"generated":{"line":1712,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1712,"column":0},"generated":{"line":1713,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1713,"column":0},"generated":{"line":1714,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1714,"column":0},"generated":{"line":1715,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1715,"column":0},"generated":{"line":1716,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1716,"column":0},"generated":{"line":1717,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1717,"column":0},"generated":{"line":1718,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1718,"column":0},"generated":{"line":1719,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1719,"column":0},"generated":{"line":1720,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1720,"column":0},"generated":{"line":1721,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1721,"column":0},"generated":{"line":1722,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1722,"column":0},"generated":{"line":1723,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1723,"column":0},"generated":{"line":1724,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1724,"column":0},"generated":{"line":1725,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1725,"column":0},"generated":{"line":1726,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1726,"column":0},"generated":{"line":1727,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1727,"column":0},"generated":{"line":1728,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1728,"column":0},"generated":{"line":1729,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1729,"column":0},"generated":{"line":1730,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1730,"column":0},"generated":{"line":1731,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1731,"column":0},"generated":{"line":1732,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1732,"column":0},"generated":{"line":1733,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1733,"column":0},"generated":{"line":1734,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1734,"column":0},"generated":{"line":1735,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1735,"column":0},"generated":{"line":1736,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1736,"column":0},"generated":{"line":1737,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1737,"column":0},"generated":{"line":1738,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1738,"column":0},"generated":{"line":1739,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1739,"column":0},"generated":{"line":1740,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1740,"column":0},"generated":{"line":1741,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1741,"column":0},"generated":{"line":1742,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1742,"column":0},"generated":{"line":1743,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1743,"column":0},"generated":{"line":1744,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1744,"column":0},"generated":{"line":1745,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1745,"column":0},"generated":{"line":1746,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1746,"column":0},"generated":{"line":1747,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1747,"column":0},"generated":{"line":1748,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1748,"column":0},"generated":{"line":1749,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1749,"column":0},"generated":{"line":1750,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1750,"column":0},"generated":{"line":1751,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1751,"column":0},"generated":{"line":1752,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1752,"column":0},"generated":{"line":1753,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1753,"column":0},"generated":{"line":1754,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1754,"column":0},"generated":{"line":1755,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1755,"column":0},"generated":{"line":1756,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1756,"column":0},"generated":{"line":1757,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1757,"column":0},"generated":{"line":1758,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1758,"column":0},"generated":{"line":1759,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1759,"column":0},"generated":{"line":1760,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1760,"column":0},"generated":{"line":1761,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1761,"column":0},"generated":{"line":1762,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1762,"column":0},"generated":{"line":1763,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1763,"column":0},"generated":{"line":1764,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1764,"column":0},"generated":{"line":1765,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1765,"column":0},"generated":{"line":1766,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1766,"column":0},"generated":{"line":1767,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1767,"column":0},"generated":{"line":1768,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1768,"column":0},"generated":{"line":1769,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1769,"column":0},"generated":{"line":1770,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1770,"column":0},"generated":{"line":1771,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1771,"column":0},"generated":{"line":1772,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1772,"column":0},"generated":{"line":1773,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1773,"column":0},"generated":{"line":1774,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1774,"column":0},"generated":{"line":1775,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1775,"column":0},"generated":{"line":1776,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1776,"column":0},"generated":{"line":1777,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1777,"column":0},"generated":{"line":1778,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1778,"column":0},"generated":{"line":1779,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1779,"column":0},"generated":{"line":1780,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1780,"column":0},"generated":{"line":1781,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1781,"column":0},"generated":{"line":1782,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1782,"column":0},"generated":{"line":1783,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1783,"column":0},"generated":{"line":1784,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1784,"column":0},"generated":{"line":1785,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1785,"column":0},"generated":{"line":1786,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1786,"column":0},"generated":{"line":1787,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1787,"column":0},"generated":{"line":1788,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1788,"column":0},"generated":{"line":1789,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1789,"column":0},"generated":{"line":1790,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1790,"column":0},"generated":{"line":1791,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1791,"column":0},"generated":{"line":1792,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1792,"column":0},"generated":{"line":1793,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1793,"column":0},"generated":{"line":1794,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1794,"column":0},"generated":{"line":1795,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1795,"column":0},"generated":{"line":1796,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1796,"column":0},"generated":{"line":1797,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1797,"column":0},"generated":{"line":1798,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1798,"column":0},"generated":{"line":1799,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1799,"column":0},"generated":{"line":1800,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1800,"column":0},"generated":{"line":1801,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1801,"column":0},"generated":{"line":1802,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1802,"column":0},"generated":{"line":1803,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1803,"column":0},"generated":{"line":1804,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1804,"column":0},"generated":{"line":1805,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1805,"column":0},"generated":{"line":1806,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1806,"column":0},"generated":{"line":1807,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1807,"column":0},"generated":{"line":1808,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1808,"column":0},"generated":{"line":1809,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1809,"column":0},"generated":{"line":1810,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1810,"column":0},"generated":{"line":1811,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1811,"column":0},"generated":{"line":1812,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1812,"column":0},"generated":{"line":1813,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1813,"column":0},"generated":{"line":1814,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1814,"column":0},"generated":{"line":1815,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1815,"column":0},"generated":{"line":1816,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1816,"column":0},"generated":{"line":1817,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1817,"column":0},"generated":{"line":1818,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1818,"column":0},"generated":{"line":1819,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1819,"column":0},"generated":{"line":1820,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1820,"column":0},"generated":{"line":1821,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1821,"column":0},"generated":{"line":1822,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1822,"column":0},"generated":{"line":1823,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1823,"column":0},"generated":{"line":1824,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1824,"column":0},"generated":{"line":1825,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1825,"column":0},"generated":{"line":1826,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1826,"column":0},"generated":{"line":1827,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1827,"column":0},"generated":{"line":1828,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1828,"column":0},"generated":{"line":1829,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1829,"column":0},"generated":{"line":1830,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1830,"column":0},"generated":{"line":1831,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1831,"column":0},"generated":{"line":1832,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1832,"column":0},"generated":{"line":1833,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1833,"column":0},"generated":{"line":1834,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1834,"column":0},"generated":{"line":1835,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1835,"column":0},"generated":{"line":1836,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1836,"column":0},"generated":{"line":1837,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1837,"column":0},"generated":{"line":1838,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1838,"column":0},"generated":{"line":1839,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1839,"column":0},"generated":{"line":1840,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1840,"column":0},"generated":{"line":1841,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1841,"column":0},"generated":{"line":1842,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1842,"column":0},"generated":{"line":1843,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1843,"column":0},"generated":{"line":1844,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1844,"column":0},"generated":{"line":1845,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1845,"column":0},"generated":{"line":1846,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1846,"column":0},"generated":{"line":1847,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1847,"column":0},"generated":{"line":1848,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1848,"column":0},"generated":{"line":1849,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1849,"column":0},"generated":{"line":1850,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1850,"column":0},"generated":{"line":1851,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1851,"column":0},"generated":{"line":1852,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1852,"column":0},"generated":{"line":1853,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1853,"column":0},"generated":{"line":1854,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1854,"column":0},"generated":{"line":1855,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1855,"column":0},"generated":{"line":1856,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1856,"column":0},"generated":{"line":1857,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1857,"column":0},"generated":{"line":1858,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1858,"column":0},"generated":{"line":1859,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1859,"column":0},"generated":{"line":1860,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1860,"column":0},"generated":{"line":1861,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1861,"column":0},"generated":{"line":1862,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1862,"column":0},"generated":{"line":1863,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1863,"column":0},"generated":{"line":1864,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1864,"column":0},"generated":{"line":1865,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1865,"column":0},"generated":{"line":1866,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1866,"column":0},"generated":{"line":1867,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1867,"column":0},"generated":{"line":1868,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1868,"column":0},"generated":{"line":1869,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1869,"column":0},"generated":{"line":1870,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1870,"column":0},"generated":{"line":1871,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1871,"column":0},"generated":{"line":1872,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1872,"column":0},"generated":{"line":1873,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1873,"column":0},"generated":{"line":1874,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1874,"column":0},"generated":{"line":1875,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1875,"column":0},"generated":{"line":1876,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1876,"column":0},"generated":{"line":1877,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1877,"column":0},"generated":{"line":1878,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1878,"column":0},"generated":{"line":1879,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1879,"column":0},"generated":{"line":1880,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1880,"column":0},"generated":{"line":1881,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1881,"column":0},"generated":{"line":1882,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1882,"column":0},"generated":{"line":1883,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1883,"column":0},"generated":{"line":1884,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1884,"column":0},"generated":{"line":1885,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1885,"column":0},"generated":{"line":1886,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1886,"column":0},"generated":{"line":1887,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1887,"column":0},"generated":{"line":1888,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1888,"column":0},"generated":{"line":1889,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1889,"column":0},"generated":{"line":1890,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1890,"column":0},"generated":{"line":1891,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1891,"column":0},"generated":{"line":1892,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1892,"column":0},"generated":{"line":1893,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1893,"column":0},"generated":{"line":1894,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1894,"column":0},"generated":{"line":1895,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1895,"column":0},"generated":{"line":1896,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1896,"column":0},"generated":{"line":1897,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1897,"column":0},"generated":{"line":1898,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1898,"column":0},"generated":{"line":1899,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1899,"column":0},"generated":{"line":1900,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1900,"column":0},"generated":{"line":1901,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1901,"column":0},"generated":{"line":1902,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1902,"column":0},"generated":{"line":1903,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1903,"column":0},"generated":{"line":1904,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1904,"column":0},"generated":{"line":1905,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1905,"column":0},"generated":{"line":1906,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1906,"column":0},"generated":{"line":1907,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1907,"column":0},"generated":{"line":1908,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1908,"column":0},"generated":{"line":1909,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1909,"column":0},"generated":{"line":1910,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1910,"column":0},"generated":{"line":1911,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1911,"column":0},"generated":{"line":1912,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1912,"column":0},"generated":{"line":1913,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1913,"column":0},"generated":{"line":1914,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1914,"column":0},"generated":{"line":1915,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1915,"column":0},"generated":{"line":1916,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1916,"column":0},"generated":{"line":1917,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1917,"column":0},"generated":{"line":1918,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1918,"column":0},"generated":{"line":1919,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1919,"column":0},"generated":{"line":1920,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1920,"column":0},"generated":{"line":1921,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1921,"column":0},"generated":{"line":1922,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1922,"column":0},"generated":{"line":1923,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1923,"column":0},"generated":{"line":1924,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1924,"column":0},"generated":{"line":1925,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1925,"column":0},"generated":{"line":1926,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1926,"column":0},"generated":{"line":1927,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1927,"column":0},"generated":{"line":1928,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1928,"column":0},"generated":{"line":1929,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1929,"column":0},"generated":{"line":1930,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1930,"column":0},"generated":{"line":1931,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1931,"column":0},"generated":{"line":1932,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1932,"column":0},"generated":{"line":1933,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1933,"column":0},"generated":{"line":1934,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1934,"column":0},"generated":{"line":1935,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1935,"column":0},"generated":{"line":1936,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1936,"column":0},"generated":{"line":1937,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1937,"column":0},"generated":{"line":1938,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1938,"column":0},"generated":{"line":1939,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1939,"column":0},"generated":{"line":1940,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1940,"column":0},"generated":{"line":1941,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1941,"column":0},"generated":{"line":1942,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1942,"column":0},"generated":{"line":1943,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1943,"column":0},"generated":{"line":1944,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1944,"column":0},"generated":{"line":1945,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1945,"column":0},"generated":{"line":1946,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1946,"column":0},"generated":{"line":1947,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1947,"column":0},"generated":{"line":1948,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1948,"column":0},"generated":{"line":1949,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1949,"column":0},"generated":{"line":1950,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1950,"column":0},"generated":{"line":1951,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1951,"column":0},"generated":{"line":1952,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1952,"column":0},"generated":{"line":1953,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1953,"column":0},"generated":{"line":1954,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1954,"column":0},"generated":{"line":1955,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1955,"column":0},"generated":{"line":1956,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1956,"column":0},"generated":{"line":1957,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1957,"column":0},"generated":{"line":1958,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1958,"column":0},"generated":{"line":1959,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1959,"column":0},"generated":{"line":1960,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1960,"column":0},"generated":{"line":1961,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1961,"column":0},"generated":{"line":1962,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1962,"column":0},"generated":{"line":1963,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1963,"column":0},"generated":{"line":1964,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1964,"column":0},"generated":{"line":1965,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1965,"column":0},"generated":{"line":1966,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1966,"column":0},"generated":{"line":1967,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1967,"column":0},"generated":{"line":1968,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1968,"column":0},"generated":{"line":1969,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1969,"column":0},"generated":{"line":1970,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1970,"column":0},"generated":{"line":1971,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1971,"column":0},"generated":{"line":1972,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1972,"column":0},"generated":{"line":1973,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1973,"column":0},"generated":{"line":1974,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1974,"column":0},"generated":{"line":1975,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1975,"column":0},"generated":{"line":1976,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1976,"column":0},"generated":{"line":1977,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1977,"column":0},"generated":{"line":1978,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1978,"column":0},"generated":{"line":1979,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1979,"column":0},"generated":{"line":1980,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1980,"column":0},"generated":{"line":1981,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1981,"column":0},"generated":{"line":1982,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1982,"column":0},"generated":{"line":1983,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1983,"column":0},"generated":{"line":1984,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1984,"column":0},"generated":{"line":1985,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1985,"column":0},"generated":{"line":1986,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1986,"column":0},"generated":{"line":1987,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1987,"column":0},"generated":{"line":1988,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1988,"column":0},"generated":{"line":1989,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1989,"column":0},"generated":{"line":1990,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1990,"column":0},"generated":{"line":1991,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1991,"column":0},"generated":{"line":1992,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1992,"column":0},"generated":{"line":1993,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1993,"column":0},"generated":{"line":1994,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1994,"column":0},"generated":{"line":1995,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1995,"column":0},"generated":{"line":1996,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1996,"column":0},"generated":{"line":1997,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1997,"column":0},"generated":{"line":1998,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1998,"column":0},"generated":{"line":1999,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":1999,"column":0},"generated":{"line":2000,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2000,"column":0},"generated":{"line":2001,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2001,"column":0},"generated":{"line":2002,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2002,"column":0},"generated":{"line":2003,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2003,"column":0},"generated":{"line":2004,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2004,"column":0},"generated":{"line":2005,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2005,"column":0},"generated":{"line":2006,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2006,"column":0},"generated":{"line":2007,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2007,"column":0},"generated":{"line":2008,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2008,"column":0},"generated":{"line":2009,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2009,"column":0},"generated":{"line":2010,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2010,"column":0},"generated":{"line":2011,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2011,"column":0},"generated":{"line":2012,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2012,"column":0},"generated":{"line":2013,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2013,"column":0},"generated":{"line":2014,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2014,"column":0},"generated":{"line":2015,"column":0}},{"source":"../node_modules/decimal.js-light/decimal.js","original":{"line":2015,"column":0},"generated":{"line":2016,"column":0}}],"sources":{"../node_modules/decimal.js-light/decimal.js":"/*! decimal.js-light v2.5.0 https://github.com/MikeMcl/decimal.js-light/LICENCE */\r\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js-light v2.5.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js-light\r\n   *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Expat Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  var MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    Decimal = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\r\n      // `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -MAX_E\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to MAX_E\r\n\r\n      // The natural logarithm of 10.\r\n      // 115 digits\r\n      LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    exponentOutOfRange = decimalError + 'Exponent out of range: ',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    ONE,\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n    MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE),    // 1286742750677284\r\n\r\n    // Decimal.prototype object\r\n    P = {};\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue                       abs\r\n   *  comparedTo                          cmp\r\n   *  decimalPlaces                       dp\r\n   *  dividedBy                           div\r\n   *  dividedToIntegerBy                  idiv\r\n   *  equals                              eq\r\n   *  exponent\r\n   *  greaterThan                         gt\r\n   *  greaterThanOrEqualTo                gte\r\n   *  isInteger                           isint\r\n   *  isNegative                          isneg\r\n   *  isPositive                          ispos\r\n   *  isZero\r\n   *  lessThan                            lt\r\n   *  lessThanOrEqualTo                   lte\r\n   *  logarithm                           log\r\n   *  minus                               sub\r\n   *  modulo                              mod\r\n   *  naturalExponential                  exp\r\n   *  naturalLogarithm                    ln\r\n   *  negated                             neg\r\n   *  plus                                add\r\n   *  precision                           sd\r\n   *  squareRoot                          sqrt\r\n   *  times                               mul\r\n   *  toDecimalPlaces                     todp\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toInteger                           toint\r\n   *  toNumber\r\n   *  toPower                             pow\r\n   *  toPrecision\r\n   *  toSignificantDigits                 tosd\r\n   *  toString\r\n   *  valueOf                             val\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this;\r\n\r\n    y = new x.constructor(y);\r\n\r\n    // Signs differ?\r\n    if (x.s !== y.s) return x.s || -y.s;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;\r\n\r\n    xdL = x.d.length;\r\n    ydL = y.d.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var x = this,\r\n      w = x.d.length - 1,\r\n      dp = (w - x.e) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = x.d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) dp--;\r\n\r\n    return dp < 0 ? 0 : dp;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).\r\n   *\r\n   */\r\n  P.exponent = function () {\r\n    return getBase10Exponent(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    return this.cmp(y) >= 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isint = function () {\r\n    return this.e > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isneg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.ispos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return this.s === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   * If no base is specified, return log[10](x).\r\n   *\r\n   * log[base](x) = ln(x) / ln(base)\r\n   *\r\n   * The maximum error of the result is 1 ulp (unit in the last place).\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var r,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      wpr = pr + 5;\r\n\r\n    // Default base is 10.\r\n    if (base === void 0) {\r\n      base = new Ctor(10);\r\n    } else {\r\n      base = new Ctor(base);\r\n\r\n      // log[-b](x) = NaN\r\n      // log[0](x)  = NaN\r\n      // log[1](x)  = NaN\r\n      if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    // log[b](-x) = NaN\r\n    // log[b](0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // log[b](1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    external = false;\r\n    r = divide(ln(x, wpr), ln(base, wpr), wpr);\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // x % 0 = NaN\r\n    if (!y.s) throw Error(decimalError + 'NaN');\r\n\r\n    // Return x if x is 0.\r\n    if (!x.s) return round(new Ctor(x), pr);\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n    q = divide(x, y, 0, 1).times(y);\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return exp(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return ln(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s || 0;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var e, sd, w,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    e = getBase10Exponent(x) + 1;\r\n    w = x.d.length - 1;\r\n    sd = w * LOG_BASE + 1;\r\n    w = x.d[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) sd--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = x.d[0]; w >= 10; w /= 10) sd++;\r\n    }\r\n\r\n    return z && e > sd ? e : sd;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var e, n, pr, r, s, t, wpr,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative or zero?\r\n    if (x.s < 1) {\r\n      if (!x.s) return new Ctor(0);\r\n\r\n      // sqrt(-x) = NaN\r\n      throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    e = getBase10Exponent(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '1e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    pr = Ctor.precision;\r\n    s = wpr = pr + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, wpr + 2)).times(0.5);\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {\r\n        n = n.slice(wpr - 3, wpr + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (s == wpr && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          round(t, pr + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        } else if (n != '9999') {\r\n          break;\r\n        }\r\n\r\n        wpr += 4;\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    // Return 0 if either is 0.\r\n    if (!x.s || !y.s) return new Ctor(0);\r\n\r\n    y.s *= x.s;\r\n    e = x.e + y.e;\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = e;\r\n\r\n    return external ? round(y, Ctor.precision) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.todp = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return round(x, dp + getBase10Exponent(x) + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = toString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), dp + 1, rm);\r\n      str = toString(x, true, dp + 1);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) return toString(x);\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\r\n    str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isneg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.toInteger = P.toint = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * The maximum error is 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, sign, yIsInt,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      guard = 12,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // pow(x, 0) = 1\r\n    if (!y.s) return new Ctor(ONE);\r\n\r\n    x = new Ctor(x);\r\n\r\n    // pow(0, y > 0) = 0\r\n    // pow(0, y < 0) = Infinity\r\n    if (!x.s) {\r\n      if (y.s < 1) throw Error(decimalError + 'Infinity');\r\n      return x;\r\n    }\r\n\r\n    // pow(1, y) = 1\r\n    if (x.eq(ONE)) return x;\r\n\r\n    pr = Ctor.precision;\r\n\r\n    // pow(x, 1) = x\r\n    if (y.eq(ONE)) return round(x, pr);\r\n\r\n    e = y.e;\r\n    k = y.d.length - 1;\r\n    yIsInt = e >= k;\r\n    sign = x.s;\r\n\r\n    if (!yIsInt) {\r\n\r\n      // pow(x < 0, y non-integer) = NaN\r\n      if (sign < 0) throw Error(decimalError + 'NaN');\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = new Ctor(ONE);\r\n\r\n      // Max k of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      e = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n      external = false;\r\n\r\n      for (;;) {\r\n        if (k % 2) {\r\n          r = r.times(x);\r\n          truncate(r.d, e);\r\n        }\r\n\r\n        k = mathfloor(k / 2);\r\n        if (k === 0) break;\r\n\r\n        x = x.times(x);\r\n        truncate(x.d, e);\r\n      }\r\n\r\n      external = true;\r\n\r\n      return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\r\n    }\r\n\r\n    // Result is negative if x is negative and the last digit of integer y is odd.\r\n    sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n    x.s = 1;\r\n    external = false;\r\n    r = y.times(ln(x, pr + guard));\r\n    external = true;\r\n    r = exp(r);\r\n    r.s = sign;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var e, str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), sd, rm);\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.tosd = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return round(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = P.valueOf = P.val = P.toJSON = function () {\r\n    var x = this,\r\n      e = getBase10Exponent(x),\r\n      Ctor = x.constructor;\r\n\r\n    return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  add                 P.minus, P.plus\r\n   *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd\r\n   *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln\r\n   *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln\r\n   *  exp                 P.exp, P.pow\r\n   *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,\r\n   *                      P.toString, divide, round, toString, exp, ln\r\n   *  getLn10             P.log, ln\r\n   *  getZeroString       digitsToString, toString\r\n   *  ln                  P.log, P.ln, P.pow, exp\r\n   *  parseDecimal        Decimal\r\n   *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,\r\n   *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,\r\n   *                      divide, getLn10, exp, ln\r\n   *  subtract            P.minus, P.plus\r\n   *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf\r\n   *  truncate            P.pow\r\n   *\r\n   *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,\r\n   *                      getLn10, exp, ln, parseDecimal, Decimal, config\r\n   */\r\n\r\n\r\n  function add(x, y) {\r\n    var carry, d, e, i, k, len, xd, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // If either is zero...\r\n    if (!x.s || !y.s) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!y.s) y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    k = x.e;\r\n    e = y.e;\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % BASE | 0;\r\n        carry = temp / BASE | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * BASE + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, dp) {\r\n      var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either 0?\r\n      if (!x.s) return new Ctor(x);\r\n      if (!y.s) throw Error(decimalError + 'Division by zero');\r\n\r\n      e = x.e - y.e;\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      for (i = 0; yd[i] == (xd[i] || 0); ) ++i;\r\n      if (yd[i] > (xd[i] || 0)) --e;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n      } else if (dp) {\r\n        sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) return new Ctor(0);\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / LOG_BASE + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * BASE + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= BASE/2\r\n        k = BASE / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k);\r\n          xd = multiplyInteger(xd, k);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= BASE / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= BASE) k = BASE - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n\r\n      q.e = e;\r\n\r\n      return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`\r\n   * significant digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   */\r\n  function exp(x, sd) {\r\n    var denominator, guard, pow, sum, t, wpr,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n\r\n    // exp(0) = 1\r\n    if (!x.s) return new Ctor(ONE);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    while (x.abs().gte(0.1)) {\r\n      x = x.times(t);    // x = x / 2^5\r\n      k += 5;\r\n    }\r\n\r\n    // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(ONE);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = round(pow.times(x), wpr);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        while (k--) sum = round(sum.times(sum), wpr);\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(x) {\r\n    var e = x.e * LOG_BASE,\r\n      w = x.d[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for (; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n\r\n    if (sd > Ctor.LN10.sd()) {\r\n\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(decimalError + 'LN10 precision limit exceeded');\r\n    }\r\n\r\n    return round(new Ctor(Ctor.LN10), sd);\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(n) is non-terminating (n != 1)\r\n   *\r\n   */\r\n  function ln(y, sd) {\r\n    var c, c0, denominator, e, numerator, sum, t, wpr, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // ln(-x) = NaN\r\n    // ln(0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // ln(1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    if (x.eq(10)) {\r\n      if (sd == null) external = true;\r\n      return getLn10(Ctor, wpr);\r\n    }\r\n\r\n    wpr += guard;\r\n    Ctor.precision = wpr;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n    e = getBase10Exponent(x);\r\n\r\n    if (Math.abs(e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = getBase10Exponent(x);\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(x, pr)) : x;\r\n    }\r\n\r\n    // x is reduced to a value near 1.\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\r\n    x2 = round(x.times(x), wpr);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = round(numerator.times(x2), wpr);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr);\r\n\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48;) ++i;\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48;) --len;\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      e = e - i - 1;\r\n      x.e = mathfloor(e / LOG_BASE);\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);\r\n    } else {\r\n\r\n      // Zero.\r\n      x.s = 0;\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).\r\n   */\r\n   function round(x, sd, rm) {\r\n    var i, j, k, n, rd, doRound, w, xdi,\r\n      xd = x.d;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd which contains the rounding digit, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // n: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;\r\n    i = sd - n;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) return x;\r\n      w = k = xd[xdi];\r\n\r\n      // Get the number of digits of w.\r\n      for (n = 1; k >= 10; k /= 10) n++;\r\n\r\n      // Get the index of rd within w.\r\n      i %= LOG_BASE;\r\n\r\n      // Get the index of rd within w, adjusted for leading zeros.\r\n      // The number of leading zeros of w is given by LOG_BASE - n.\r\n      j = i - LOG_BASE + n;\r\n    }\r\n\r\n    if (rm !== void 0) {\r\n      k = mathpow(10, n - j - 1);\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / k % 10 | 0;\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\r\n\r\n      // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the\r\n      // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give\r\n      // 714.\r\n\r\n      doRound = rm < 4\r\n        ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n    }\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      if (doRound) {\r\n        k = getBase10Exponent(x);\r\n        xd.length = 1;\r\n\r\n        // Convert sd to decimal places.\r\n        sd = sd - k - 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = mathfloor(-sd / LOG_BASE) || 0;\r\n      } else {\r\n        xd.length = 1;\r\n\r\n        // Zero.\r\n        xd[0] = x.e = x.s = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (doRound) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n          if ((xd[0] += k) == BASE) {\r\n            xd[0] = 1;\r\n            ++x.e;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n\r\n    if (external && (x.e > MAX_E || x.e < -MAX_E)) {\r\n      throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function subtract(x, y) {\r\n    var d, e, i, j, k, len, xd, xe, xLTy, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // Return y negated if x is zero.\r\n    // Return x if y is zero and x is non-zero.\r\n    if (!x.s || !y.s) {\r\n      if (y.s) y.s = -y.s;\r\n      else y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are non-zero numbers with the same sign.\r\n\r\n    e = y.e;\r\n    xe = x.e;\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of zeros\r\n      // needing to be prepended, but this can be avoided while still ensuring correct rounding by\r\n      // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to xd if shorter.\r\n    // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(0);\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function toString(x, isExp, sd) {\r\n    var k,\r\n      e = getBase10Exponent(x),\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (e < 0 ? 'e' : 'e+') + e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  clone\r\n   *  config/set\r\n   */\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * value {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(value) {\r\n      var x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(value);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (value instanceof Decimal) {\r\n        x.s = value.s;\r\n        x.e = value.e;\r\n        x.d = (value = value.d) ? value.slice() : value;\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'number') {\r\n\r\n        // Reject Infinity/NaN.\r\n        if (value * 0 !== 0) {\r\n          throw Error(invalidArgument + value);\r\n        }\r\n\r\n        if (value > 0) {\r\n          x.s = 1;\r\n        } else if (value < 0) {\r\n          value = -value;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 0;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (value === ~~value && value < 1e7) {\r\n          x.e = 0;\r\n          x.d = [value];\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, value.toString());\r\n      } else if (typeof value !== 'string') {\r\n        throw Error(invalidArgument + value);\r\n      }\r\n\r\n      // Minus sign?\r\n      if (value.charCodeAt(0) === 45) {\r\n        value = value.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      if (isDecimal.test(value)) parseDecimal(x, value);\r\n      else throw Error(invalidArgument + value);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n\r\n    Decimal.clone = clone;\r\n    Decimal.config = Decimal.set = config;\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      throw Error(decimalError + 'Object expected');\r\n    }\r\n    var i, p, v,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -1 / 0, 0,\r\n        'toExpPos', 0, 1 / 0\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if ((v = obj[p = ps[i]]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if ((v = obj[p = 'LN10']) !== void 0) {\r\n        if (v == Math.LN10) this[p] = new this(v);\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(Decimal);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Internal constant.\r\n  ONE = new Decimal(1);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = Decimal;\r\n\r\n    // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self\r\n        ? self : Function('return this')();\r\n    }\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n"},"lineCount":2016}},"error":null,"hash":"cf32eda7295e161b6bb9f5682fe45098","cacheData":{"env":{}}}