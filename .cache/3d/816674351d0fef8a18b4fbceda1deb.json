{"id":"../node_modules/math-expression-evaluator/src/postfix.js","dependencies":[{"name":"/Users/manojkumars/Documents/websocket_react/package.json","includedInParent":true,"mtime":1582035290445},{"name":"/Users/manojkumars/Documents/websocket_react/node_modules/math-expression-evaluator/package.json","includedInParent":true,"mtime":1581928656382},{"name":"./lexer.js","loc":{"line":2,"column":21},"parent":"/Users/manojkumars/Documents/websocket_react/node_modules/math-expression-evaluator/src/postfix.js","resolved":"/Users/manojkumars/Documents/websocket_react/node_modules/math-expression-evaluator/src/lexer.js"}],"generated":{"js":"\r\n    var Mexp=require('./lexer.js');\r\n\r\n\tMexp.prototype.toPostfix = function () {\r\n\t\t'use strict';\r\n\t\tvar post=[],elem,popped,prep,pre,ele;\r\n    \tvar stack=[{value:\"(\",type:4,pre:0}];\r\n\t\tvar arr=this.value;\r\n\t\tfor (var i=1; i < arr.length; i++) {\r\n\t\t\tif(arr[i].type===1||arr[i].type===3||arr[i].type===13){\t//if token is number,constant,or n(which is also a special constant in our case)\r\n\t\t\t\tif(arr[i].type===1)\r\n\t\t\t\t\tarr[i].value=Number(arr[i].value);\r\n\t\t\t\tpost.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse if(arr[i].type===4){\r\n\t\t\t\tstack.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse if(arr[i].type===5){\r\n\t\t\t\twhile((popped=stack.pop()).type!==4){\r\n\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(arr[i].type===11){\r\n\t\t\t\twhile((popped=stack.pop()).type!==4){\r\n\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t}\r\n\t\t\t\tstack.push(popped);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telem=arr[i];\r\n\t\t\t\tpre=elem.pre;\r\n\t\t\t\tele=stack[stack.length-1];\r\n\t\t\t\tprep=ele.pre;\r\n\t\t\t\tvar flag=ele.value=='Math.pow'&&elem.value=='Math.pow';\r\n\t\t\t\tif(pre>prep)stack.push(elem);\r\n\t\t\t\telse {\r\n\t\t\t\t\twhile(prep>=pre&&!flag||flag&&pre<prep){\r\n\t\t\t\t\t\tpopped=stack.pop();\r\n\t\t\t\t\t\tele=stack[stack.length-1];\r\n\t\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t\t\tprep=ele.pre;\r\n\t\t\t\t\t\tflag=elem.value=='Math.pow'&&ele.value=='Math.pow';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstack.push(elem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Mexp(post);\r\n\t};\r\n    module.exports=Mexp;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/math-expression-evaluator/src/postfix.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"../node_modules/math-expression-evaluator/src/postfix.js":"\r\n    var Mexp=require('./lexer.js');\r\n\r\n\tMexp.prototype.toPostfix = function () {\r\n\t\t'use strict';\r\n\t\tvar post=[],elem,popped,prep,pre,ele;\r\n    \tvar stack=[{value:\"(\",type:4,pre:0}];\r\n\t\tvar arr=this.value;\r\n\t\tfor (var i=1; i < arr.length; i++) {\r\n\t\t\tif(arr[i].type===1||arr[i].type===3||arr[i].type===13){\t//if token is number,constant,or n(which is also a special constant in our case)\r\n\t\t\t\tif(arr[i].type===1)\r\n\t\t\t\t\tarr[i].value=Number(arr[i].value);\r\n\t\t\t\tpost.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse if(arr[i].type===4){\r\n\t\t\t\tstack.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse if(arr[i].type===5){\r\n\t\t\t\twhile((popped=stack.pop()).type!==4){\r\n\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(arr[i].type===11){\r\n\t\t\t\twhile((popped=stack.pop()).type!==4){\r\n\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t}\r\n\t\t\t\tstack.push(popped);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telem=arr[i];\r\n\t\t\t\tpre=elem.pre;\r\n\t\t\t\tele=stack[stack.length-1];\r\n\t\t\t\tprep=ele.pre;\r\n\t\t\t\tvar flag=ele.value=='Math.pow'&&elem.value=='Math.pow';\r\n\t\t\t\tif(pre>prep)stack.push(elem);\r\n\t\t\t\telse {\r\n\t\t\t\t\twhile(prep>=pre&&!flag||flag&&pre<prep){\r\n\t\t\t\t\t\tpopped=stack.pop();\r\n\t\t\t\t\t\tele=stack[stack.length-1];\r\n\t\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t\t\tprep=ele.pre;\r\n\t\t\t\t\t\tflag=elem.value=='Math.pow'&&ele.value=='Math.pow';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstack.push(elem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Mexp(post);\r\n\t};\r\n    module.exports=Mexp;"},"lineCount":50}},"error":null,"hash":"cb4b6473e47dc0f44f2bc3c746a6e110","cacheData":{"env":{}}}