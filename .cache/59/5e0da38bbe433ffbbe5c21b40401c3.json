{"id":"../node_modules/lodash/_baseExtremum.js","dependencies":[{"name":"/Users/manojkumars/Documents/websocket_react/package.json","includedInParent":true,"mtime":1582035290445},{"name":"/Users/manojkumars/Documents/websocket_react/node_modules/lodash/package.json","includedInParent":true,"mtime":1581928580882},{"name":"./isSymbol","loc":{"line":1,"column":23},"parent":"/Users/manojkumars/Documents/websocket_react/node_modules/lodash/_baseExtremum.js","resolved":"/Users/manojkumars/Documents/websocket_react/node_modules/lodash/isSymbol.js"}],"generated":{"js":"var isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/lodash/_baseExtremum.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"../node_modules/lodash/_baseExtremum.js":"var isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n"},"lineCount":33}},"error":null,"hash":"f8a95a8cc80d66403eec3d1dd03cad42","cacheData":{"env":{}}}